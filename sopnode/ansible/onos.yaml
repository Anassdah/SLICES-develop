---
- name: ONOS
  hosts: controllers
  remote_user: root
  tasks:
    - name: install Python dependencies
      pip:
        name: kubernetes
        state: present

    - name: Create ONOS namespace 
      kubernetes.core.k8s:
        name: onos-ns
        api_version: v1
        kind: Namespace
        state: present

    - name: Deploy shared state (ConfigMap)
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: startup-scripts
            namespace: onos-ns
          data:
            activate-barefoot: |
              #!/bin/bash
              host=$(hostname -s)
              status_code=$(curl -u onos:rocks --silent --output /dev/null --write-out '%{http_code}' -X POST http://${host}:8181/onos/v1/applications/org.onosproject.gui2/active)
              if [ ${status_code} == "200" ]
              then
                      exit 0
              else
                      exit 1
              fi

    - name: Deploy ONOS
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: onos-deployment
            namespace: onos-ns
            labels:
              app: onos
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: onos
            template:
              metadata:
                labels:
                  app: onos
              spec:
                volumes:
                  - name: startup
                    configMap:
                      name: startup-scripts
                containers:
                - name: onos
                  image: onosproject/onos:2.7.0
                  ports:
                  - containerPort: 830
                  - containerPort: 5005
                  - containerPort: 8101
                  - containerPort: 8181
                  volumeMounts:
                    - name: startup
                      mountPath: /startup
                  startupProbe:
                    exec:
                      command:
                        - /bin/bash
                        - /startup/activate-barefoot
                    failureThreshold: 6
                    initialDelaySeconds: 10
                    periodSeconds: 10
                    timeoutSeconds: 10

    - name: Deploy ONOS-service
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: onos-service
            namespace: onos-ns
          spec:
            selector:
              app: onos 
            ports:
            - protocol: TCP
              port: 8181
              targetPort: 8181
      register: onos_cluster

    - debug:
        msg:
          - "ONOS clusterIP is {{ onos_cluster.result.spec.clusterIP }}"
          - "ssh -A -i ~/.ssh/id_rsa_silecs -L 8181:{{ onos_cluster.result.spec.clusterIP }}:8181 root@sopnode-sw2-eth0.inria.fr"

    - name: check if fabric-tna is built
      stat:
        path: ~/fabric-tna/target/fabric-tna-1.2.0-SNAPSHOT.oar
      register: fabric_oar

    - name: Retrieve fabric-tna
      ansible.builtin.git:
        repo: https://github.com/stratum/fabric-tna.git
        dest: fabric-tna
        version: tags/1.1.0
        force: yes
      when: fabric_oar.stat.exists == false

    - name: Make fabric
      shell: make {{ fabric_profile | default('fabric') }}
      args:
        chdir: fabric-tna
      environment:
        SDE_VERSION: 9.7.0
        SDE_DOCKER_IMG: p4-studio
      when: fabric_oar.stat.exists == false

    - name: Make pipeconf
      shell: make pipeconf
      args:
        chdir: fabric-tna
      environment:
        SDE_VERSION: 9.7.0
        SDE_DOCKER_IMG: p4-studio
      when: fabric_oar.stat.exists == false

    - name: Build profiles
      shell: make build PROFILES="{{ fabric_profile | default('fabric') }}"
      args:
        chdir: fabric-tna
      environment:
        SDE_VERSION: 9.7.0
        SDE_DOCKER_IMG: p4-studio
      when: fabric_oar.stat.exists == false
      register: build_profiles

    # NOTE:XXX: #1
    - name: Wait for ONOS deployment to be ready
      shell: kubectl get deployment onos-deployment --namespace onos-ns -o=jsonpath='{.status.readyReplicas}/{.status.replicas}'
      register: _onos_deployment
      until: _onos_deployment.stdout == "1/1"
      delay: 10   # Every 10s
      retries: 30 # 30 * 10s = 300s = 5min

    - name: Activate applications (may take minutes)
      uri:
        url: http://{{ onos_cluster.result.spec.clusterIP }}:8181/onos/v1/applications/{{ item.name }}/active
        user: onos
        password: rocks
        method: POST
      register: _result
      until: _result.status == 200
      delay: 10   # Every 10s
      retries: 5 # 5 * 10s = 50s
      with_items: "{{ onos_applications }}"
      when: onos_applications is defined 

    - name: Install pipeconfs
      shell: "make pipeconf-install ONOS_HOST={{ onos_cluster.result.spec.clusterIP }}"
      args:
        chdir: fabric-tna
      environment:
        SDE_VERSION: 9.7.0
        SDE_DOCKER_IMG: p4-studio
      when: fabric_oar.stat.exists == true or build_profiles.failed == false

    - name: make netcfg
      ansible.builtin.template:
        src: netcfg.j2
        dest:  fabric-tna/tofino-netcfg.json

    - name: Push netcfg
      shell: "make netcfg ONOS_HOST={{ onos_cluster.result.spec.clusterIP }}"
      args:
        chdir: fabric-tna
      environment:
        SDE_VERSION: 9.7.0
        SDE_DOCKER_IMG: p4-studio