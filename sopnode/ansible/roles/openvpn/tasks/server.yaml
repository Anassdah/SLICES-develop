- name: Activate IP forwarding
  ansible.posix.sysctl:
    name: net.ipv4.ip_forward
    value: 1
    sysctl_set: yes
    state: present
    reload: yes
  become: yes

- name: check if CA is already setup
  stat:
    path: CA
  register: ca

- name: create CA
  block:
  - name: Create CA directory
    ansible.builtin.file:
      path: CA
      state: directory
      mode: '0700'

  - name: Initialize CA PKI
    ansible.builtin.shell: easyrsa init-pki
    args:
      chdir: CA

  - name: Set CA parameters
    ansible.builtin.template:
      src: vars.j2
      dest: CA/pki/vars

  - name: Build CA
    ansible.builtin.shell: echo "Sopnode CA" | easyrsa build-ca nopass
    args:
      chdir: CA
  when: ca.stat.exists == false


- name: check if server is already setup
  stat:
    path: server
  register: server

- name: configure network
  block:
  - name: Configure ufw
    block:
      - name: Configure ufw (1/5)
        ansible.builtin.blockinfile:
          path: /etc/ufw/before.rules
          insertbefore: BOF
          block: |
            # START OPENVPN RULES
            # NAT table rules
            *nat
            :POSTROUTING ACCEPT [0:0]
            # Allow traffic from OpenVPN client to {{ ansible_default_ipv4.interface }}
            -A POSTROUTING -s 10.8.0.0/24 -o {{ ansible_default_ipv4.interface }} -j MASQUERADE
            # END OPENVPN RULES

      - name: Configure ufw (2/5)
        ansible.builtin.lineinfile:
          path: /etc/ufw/before.rules
          state: present
          line: 'COMMIT'

      - name: Configure ufw (3/5)
        ansible.builtin.replace:
          path: /etc/default/ufw
          regexp: 'DEFAULT_FORWARD_POLICY=".*"'
          replace: DEFAULT_FORWARD_POLICY="ACCEPT"

      - name: Configure ufw (4/5)
        ansible.builtin.shell: ufw allow 1194/udp

      - name: Configure ufw (5/5)
        ansible.builtin.shell: ufw reload
    become: yes

  - name: Create server directory
    ansible.builtin.file:
      path: server
      state: directory
      mode: '0700'

  - name: Set server parameters
    ansible.builtin.copy:
      content: |
        set_var EASYRSA_ALGO "ec"
        set_var EASYRSA_DIGEST "sha512"
      dest: server/vars

  - name: Initialize server PKI
    ansible.builtin.shell: echo 'yes' | easyrsa init-pki
    args:
      chdir: server

  - name: Server request
    ansible.builtin.shell: echo "server" | easyrsa gen-req server nopass
    args:
      chdir: server

  - name: Import server certificate
    ansible.builtin.shell: easyrsa import-req ../server/pki/reqs/server.req server
    args:
      chdir: CA

  - name: Create server certificate
    ansible.builtin.shell: echo "yes" | easyrsa sign-req server server
    args:
      chdir: CA

  - name: Generate server secret key
    ansible.builtin.shell: openvpn --genkey --secret ta.key
    args:
      chdir: server

  - name: Install server creds
    ansible.builtin.copy:
      src: '{{ item }}'
      dest: /etc/openvpn/server/{{ item | basename }}
      mode: "0400"
      remote_src: yes
    loop:
      - server/pki/private/server.key
      - CA/pki/issued/server.crt
      - CA/pki/ca.crt
      - server/ta.key
    become: yes
  when: server.stat.exists == false

- name: Configure openvpn server
  ansible.builtin.template:
    src: server.conf.j2
    dest: /etc/openvpn/server/server.conf
    mode: '0400'
  become: yes
  notify:
    - restart openvpn