---
- block:
  - name: Add signing key
    ansible.builtin.apt_key:
      url: "https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }}/gpg"
      state: present

  - name: Add repository into sources list
    ansible.builtin.apt_repository:
      repo: "deb [arch={{ [ansible_architecture] | map('extract', deb_architecture) | first }}] https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
      state: present
      filename: docker

  - name: Install Docker
    ansible.builtin.apt:
      name: '{{item}}'
      update_cache: true
      autoclean: yes
    with_items: "{{ lookup('vars', (ansible_os_family | lower)+ '_docker')}}"

  - name: Allow all to use docker
    become: yes
    ansible.builtin.file:
      path: /var/run/docker.sock
      mode: '0666'

  become: yes
  when:
    - not lookup('vars', (ansible_os_family | lower)+ '_docker') is subset(ansible_facts.packages.keys())

  
- name: Download and install CNI (1/2)
  ansible.builtin.file:
    path: /opt/cni/bin
    state: directory

- name: Download and install CNI (2/2)
  ansible.builtin.unarchive:
    src: https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz
    dest: /opt/cni/bin
    remote_src: yes

- name: Use systemd cgroup for Docker
  ansible.builtin.template:
    src: daemon.json.j2
    dest: /etc/docker/daemon.json

- name: Reload docker
  ansible.builtin.systemd:
    name: docker
    state: restarted
    daemon_reload: yes

# install Go
- name: Download Go
  ansible.builtin.get_url:
    url: https://storage.googleapis.com/golang/getgo/installer_linux
    dest: './installer_linux'
    mode: '0500'
- name: Install Go
  ansible.builtin.shell: './installer_linux'

# install cri-dockerd
- name: Retrieve cri-dockerd (1/2)
  ansible.builtin.git:
    repo: https://github.com/Mirantis/cri-dockerd.git
    dest: cri-dockerd
    version: d8accf791cbb9762a218f47507378a7c4cb63797
    force: yes
- name: Retrieve cri-dockerd (2/2)
  ansible.builtin.file:
    path: ./cri-dockerd/bin
    state: directory

- name: Build cri-dockerd
  ansible.builtin.shell: '/root/.go/bin/go build -o bin/cri-dockerd'
  args:
    chdir: ./cri-dockerd
  environment:
    GOPATH: /root/.go

- name: Install cri-dockerd (1/4)
  ansible.builtin.file:
    path: /usr/local/bin
    state: directory

- name: Install cri-dockerd (2/4)
  ansible.builtin.shell: 'install -o root -g root -m 0755 bin/cri-dockerd /usr/local/bin/cri-dockerd'
  args:
    chdir: ./cri-dockerd

- name: Install cri-dockerd (3/4)
  ansible.builtin.shell: 'cp -a packaging/systemd/* /etc/systemd/system'
  args:
    chdir: ./cri-dockerd

- name: Install cri-dockerd (4/4)
  ansible.builtin.shell: "sed -i -e 's,/usr/bin/cri-dockerd,/usr/local/bin/cri-dockerd,' /etc/systemd/system/cri-docker.service"
  args:
    chdir: ./cri-dockerd

- name: Enable and start cri-docker service
  ansible.builtin.systemd:
    name: cri-docker.service
    state: restarted
    enabled: yes
    daemon_reload: yes

- name: Enable and start cri-docker socket
  ansible.builtin.systemd:
    name: cri-docker.socket
    state: restarted
    enabled: yes
    daemon_reload: yes