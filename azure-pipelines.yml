

# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- develop

pool:
 name: Default
 #name: Azure Pipelines
 
resources:
- repo: self



stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: Default

    steps:
    # - script: |
    #     whoami
    #     ip addr
    #     touch ~/.ssh/authorized-keys
    #     echo $(Z1_PUBLIC_KEY) > ~/.ssh/authorized-keys
      # - task: SSH@0
    #   inputs:
    #     sshEndpoint: 'sopnode-z1'
    #     runOptions: 'commands'
    #     commands: |
    #       echo '##vso[task.setvariable variable=FOO] \$(multipass info dn --format json | jq -r '.info.dn.ipv4[0]')'
    #     readyTimeout: '20000'





    #  Create VMs
    - task: SSH@0
      displayName: 'Launch Multipass VMs'
      inputs:
        sshEndpoint: 'sopnode-z1'
        runOptions: 'commands'
        commands: |
          multipass launch --cloud-init azurevm-init.yaml --cpus 4 --disk 40G --mem 16G --name leftclient
          multipass launch --cloud-init azurevm-init.yaml --cpus 4 --disk 40G --mem 16G --name rightclient
          multipass launch --cloud-init azurevm-init.yaml --cpus 4 --disk 40G --mem 16G --name leftswitch
        readyTimeout: '20000'
    # Fetch IP@ of VMs to be used in ansible hosts files
    - task: SSH@0
      displayName: 'Fetch IP@ of VMs'
      inputs:
        sshEndpoint: 'sopnode-z1'
        runOptions: 'commands'
        commands: |
          multipass info leftclient --format json | jq -r '.info.node2.ipv4[0]' > vm.txt
          multipass info rightclient --format json | jq -r '.info.node3.ipv4[0]' >> vm.txt
          multipass info leftswitch --format json | jq -r '.info.node3.ipv4[0]' >> vm.txt
          #Send the vm.txt to the azure VM (already exists before the pipeline)
          scp -o StrictHostKeyChecking=no $HOME/vm.txt ubuntu@10.92.171.99:/home/ubuntu/
          #Send the vm.txt to the azure agent container
          multipass exec azure --  docker cp /home/ubuntu/vm.txt azureagent:/root/
        readyTimeout: '20000'



    - script: |
 
        # Setup Environment
        export PATH="$HOME/.local/bin:$PATH"
        . ~/.bashrc
        git checkout tags/2nd-summer-school
        leftclient=$(sed -n '1p' /root/vm.txt)
        rightclient=$(sed -n '2p' /root/vm.txt)
        leftswitch=$(sed -n '2p' /root/vm.txt)
        cd sopnode/ansible
        # Creating RAN cluster
        sed -i "s/172\.16\.2\.2/$node1/g" inventories/blueprint/ran/hosts
        sed -i 's/root/ubuntu/g' inventories/blueprint/ran/group_vars/all
        sed -i "s/172\.16\.2\.27/10\.92\.171\.134/g; s/172\.16\.0\.0\/12/10\.92\.171\.0\/24/g" params.blueprint.ran.yaml 
        ansible-playbook -i inventories/blueprint/ran/ k8s-master.yaml --extra-vars "@params.blueprint.ran.yaml"
        ansible-playbook -i inventories/blueprint/ran/ k8s-node.yaml --extra-vars "@params.blueprint.ran.yaml"


      #   # Creating Core cluster
      #   sed -i 's/root/ubuntu/g' inventories/blueprint/core/group_vars/all
      #   sed -i 's/172\.16\.2\.26/10\.92\.171\.140/g; s/172\.16\.0\.0\/12/10\.92\.171\.0\/24/g' params.blueprint.core.yaml
      #   sed -i 's/172\.16\.2\.5/10\.92\.171\.140/g; s/172\.16\.2\.6/10\.92\.171\.229/g' inventories/blueprint/core/hosts
      #   ansible-playbook -i inventories/blueprint/core/ k8s-master.yaml --extra-vars "@params.blueprint.core.yaml"
      #   ansible-playbook -i inventories/blueprint/core/ k8s-nodes.yaml --extra-vars "@params.blueprint.core.yaml"
      displayName: 'Blueprint Deployment'

    - task: SSH@0
      inputs:
        sshEndpoint: 'sopnode-z1'
        runOptions: 'commands'
        commands: |
          multipass delete --purge node1
          multipass delete --purge node2
        readyTimeout: '20000'
      displayName: Destroy VMs
    # - task: DockerInstaller@0
    #   inputs:
    #     dockerVersion: '17.09.0-ce'
    #   displayName: Install docker
    #     # Docker
    # - task: Docker@2
    #   inputs:
    #     containerRegistry: 'dockeregistry'
    #     repository: 'anassdahchour/blueprint'
    #     command: 'buildAndPush'
    #     Dockerfile: 'sopnode/ansible/Dockerfile'
    # - script: | 

    #           # git checkout tags/2nd-summer-school
    #           cd sopnode/ansible
    #   displayName: check dependencies
    # - script: |
    #           python3 -m pip -V
    #           echo $PATH

    #           ansible --version
    #           #ansible-playbook  -i inventories/blueprint/ k8s-master.yaml --extra-vars "@params.blueprint.yaml"
    #   displayName: Ansible